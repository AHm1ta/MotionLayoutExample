// Generated by view binder compiler. Do not edit!
package com.example.uitestapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.uitestapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton button;

  @NonNull
  public final ImageView movingImageView;

  @NonNull
  public final AppCompatButton secondPage;

  @NonNull
  public final ImageView staticImageView;

  @NonNull
  public final ConstraintLayout toolbar;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView, @NonNull AppCompatButton button,
      @NonNull ImageView movingImageView, @NonNull AppCompatButton secondPage,
      @NonNull ImageView staticImageView, @NonNull ConstraintLayout toolbar) {
    this.rootView = rootView;
    this.button = button;
    this.movingImageView = movingImageView;
    this.secondPage = secondPage;
    this.staticImageView = staticImageView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      AppCompatButton button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.movingImageView;
      ImageView movingImageView = ViewBindings.findChildViewById(rootView, id);
      if (movingImageView == null) {
        break missingId;
      }

      id = R.id.second_page;
      AppCompatButton secondPage = ViewBindings.findChildViewById(rootView, id);
      if (secondPage == null) {
        break missingId;
      }

      id = R.id.staticImageView;
      ImageView staticImageView = ViewBindings.findChildViewById(rootView, id);
      if (staticImageView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      ConstraintLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, button, movingImageView,
          secondPage, staticImageView, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
